@using KushalBlogWebApp.Data.Common.Paging;
@using KushalBlogWebApp.Data.Model
@model PagedResponse<AdminBlogModel>
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="row align-items-center">
                        <div class="col">
                            <h4 class="card-title">List of Child Blog Posts</h4>
                        </div>
                        <!--end col-->
    @*                     <div class="col-auto">
                            <div class="add-btn">
                                <a style="cursor:pointer" onclick="ShowPopUp('@Url.Action("AddNewChildBlog","AdminBlog", new { Id = Model. }))','Add New Post')" class="btn btn-primary btn-shadow-2 btn-sm text-light">
                                    <i class="fa fa-solid fa-plus"></i>Add Post
                                </a>
                            </div>
                        </div> *@
                        <!--end col-->
                    </div>
                    <!--end row-->
                </div>
                <!--end card-header-->
                <div class="card-body">

                    <div id="ChildAdminBlogIndex" class="table-responsive">
                        <partial name="_NewChildBlogIndex" />
                    </div>
                </div>
                <!--end card-body-->
            </div>
            <!--end card-->
        </div> <!-- end col -->
    </div> <!-- end row -->




</div><!-- container -->
@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize pagination settings object
            Pagination.init({
                ajax: true,
                method: 'GET',
                browserPath: '@Context.Request.Path',
                fetchUrl: '@Url.Action("ChildBlogIndex", "AdminBlog")',
                selector: '#ChildAdminBlogIndex'
            });

            // attach 'before' event handler to 'Pagination' object to get all field parameters for pagination
            $(Pagination).on('before', function (e) {
                e.preventDefault();
                { debugger }
                var usersFilterFormValues = $('#Formamounttypefilter').serializeArray();
                $.each(usersFilterFormValues, function (i, obj) {
                    e.payload.paramsBuilder.addParameter(obj['name'], obj['value']);
                });

                e.payload.paramsBuilder.addParameters(getPaginationFieldParams());
            });

            addUsersPageHandlers();
            addPaginationHandlers();

        });

    </script>
}